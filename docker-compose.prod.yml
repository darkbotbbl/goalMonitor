version: "3.7"


services: 
    # nginx service that will be running as the reverse proxy
    nginx:
        build: 
            context: .
            dockerfile: ./nginx/Dockerfile
        restart: on-failure
        volumes: 
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports: 
            - 80:80
        depends_on: 
            - backend
            - frontend
        # command: nginx -g 'daemon off;'
    
    # backend service that will run django
    backend:
        build: 
            context: ./backend
            dockerfile: Dockerfile.prod
        hostname: backend
        ports: 
            - 8000:8000
        volumes: 
            - ./backend:/backend/project:rw
        depends_on: 
            - db
        env_file: ./.env.prod
        command: >
            sh -c "python manage.py makemigrations && 
                    python manage.py migrate && 
                    gunicorn goalMonitor.wsgi -b 0.0.0.0:8000"

    db:
        image: postgres:latest
        hostname: db
        env_file:
            - ./.env.db.prod
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - 5432

    redis:
        image: redis:latest
        hostname: redis
        ports: 
            - 6379

        
    frontend:
        build: 
            context: ./frontend
            dockerfile: Dockerfile.prod
        ports: 
            - 8080:8080
        depends_on: 
            - backend
        restart: on-failure
        environment: 
            - CHOKIDAR_USEPOLLING=true


volumes:
    postgres_data:
